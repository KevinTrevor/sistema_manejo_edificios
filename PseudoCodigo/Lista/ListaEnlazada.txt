ListaEnlazada = clase de 
                    <--Atributos--->
                -inicio: Nodo<E> del tipo especificado 
                                                    <E viene siendo el tipo de dato que recibira inicio al momento de instaciar el objeto>
                -fin: Nodo<E> del tipo especificado
                -size: entero

                    <---Metodos--->
                <--Constructor--->

                Metodo ListaEnlazada()
                inicio <- Nulo
                fin<-Nulo
                size<- 0
                FinMetodo

                Metodo esVacia():booleano
                esVacia <- size == 0
                FinMetodo

                Metodo eliminarDato(Objeto dato)
                Si(esVacia() = verdadero)Entonces
                
                    Escribir "No hay datos que eliminar"
                Sino
                    auxiliar:Nodo de tipo E
                    previo: Nodo de tipo E
                    auxiliar <- getInicio()
                    previo <- Nulo

                    Si(auxiliar.getInfo() == dato)Entonces <Compara si la informacion en el nodo es igual al dato 

                        setInicio(auxiliar.getSiguiente())
                        auxiliar.setSiguiente(nulo)
                        size <- size - 1
                    Sino
                        Mientras(auxiliar.getInfo()<> dato y auxiliar.getSiguiente() <> nulo)Hacer

                            previo <- auxiliar
                            auxiliar <- auxiliar.getSiguiente()

                        Finmientras
                        Si(auxiliar.getInfo() == dato)Entonces

                            Escribir "No se encontro el registro a eliminar."
                        Sino
                            Si(getFin().getInfo() == dato)Entonces
                            
                                previo.setSiguiente(nulo)
                                setFin(previo)
                            Sino
                                previo.setSiguiente(auxiliar.setSiguiente())
                                auxiliar.setSiguiente(nulo)
                            Finsi
                            size <- size - 1
                        Finsi
                    Finsi
                Finsi
                FinMetodo

                Metodo buscarDato(Object dato):E <---Retorna el tipo de dato especificado E se especifica al momento de instaciar el objeto>
                datoEncontrado: E
                datoEncontrado <- nulo
                
                Si(esVacia() = verdadero)Entonces

                Escribir "La lista esta vacia"

                Sino
                    auxiliar: Nodo de tipo E
                    auxiliar <- getInicio()
                    Mientras(auxiliar.getInfo() == dato y auxiliar.getSiguiente() <> nulo)Entonces
                        auxiliar <- auxiliar.getSiguiente()
                    Finmientras
                    Si(auxiliar.getInfo() <> dato)Entonces
                        Escribir "No se encontro el registro"
                    Sino
                        datoEncontrado <- auxiliar.getInfo()
                    Finsi
                Finsi

                buscarDato <- datoEncontrado
                
                FinMetodo

                Metodo modificarDato(Object dato, E nuevoRegistro)<Dato es un objeto que es declarado al momento de enviarse por parametros>
                                                                  <Este puede ser integer,string cualquier cosa, y el registro es por el que se reemplaza>

                    Si(esVacia() = verdadero)Entonces
                        Escribir "No hay datos en lista"
                    Sino
                        auxiliar: Nodo de tipo E 
                        auxiliar <- getInicio()
                        Mientras( auxiliar.getInfo() <> dato y auxiliar.getSiguiente() <> nulo)Hacer
                            auxiliar <- auxiliar.getSiguiente()

                        Finmientras
                        Si(auxiliar.getInfo() <> dato)Entonces

                            Escribir "No se encontro el registro "
                        Sino
                            auxiliar.setInfo(nuevoRegistro)
                        Finsi
                    Finsi

                FinMetodo

                Metodo insertarInicio(E dato) <dato especificado al momento de instaciar la lista>
                nuevo: Nodo de tipo E
                Si(esVacia() = verdadero)Entonces
                    setInicio(nuevo)
                    setFin(nuevo)
                    size <- size + 1
                Sino
                    nuevo.setSiguiente(getInicio())
                    setInicio(nuevo)
                    size <- size + 1
                FinMetodo

                Metodo eliminarInicio()
                Si(esVacio())Entonces

                    escribir"La lista esta vacia"
                Sino
                    auxiliar: Nodo de tipo E
                    auxiliar <- getInicio().getSiguiente()
                    getInicio().setSiguiente(null)
                    setInicio(auxiliar)
                    size <- size - 1
                Finsi

                FinMetodo

                Metodo eliminarFin()
                Si(esVacia() = verdaero)Entonces\
                    Escribir "La lista esta vacia"
                Sino
                    auxiliar: Nodo de tipo E
                    auxiliar <- getInicio()

                    Mientras(auxiliar.getSiguiente() <> getFin())Hacer
                    
                        auxiliar <- auxiliar.getSiguiente()
                    
                    Finmientras
                    auxiliar.setSiguiente(null)
                    setFin(auxiliar)
                    size <- size - 1
                Finsi
                FinMetodo

                Metodo getInicio(): nodo de tipo E
                
                getInicio <- inicio
                
                FinMetodo

                Metodo setInicio(Nodo _inicio)
                    inicio <- _inicio
                FinMetodo
                
                Metodo getFin(): nodo de tipo E
                
                    getFin <- fin
                
                FinMetodo

                Metodo getSize():entero

                getSize <- size

                FinMetodo

                Metodo setSize(int _size)

                size <- _size

                FinMetodo